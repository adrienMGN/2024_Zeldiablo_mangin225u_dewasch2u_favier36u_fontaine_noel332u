@startuml
title Diagramme de SÃ©quence pour LabyJeu avec Moteur de LabyJeu


participant Main
participant MoteurJeu

create LabyJeu
Main -> LabyJeu: new

create LabyDessin
Main -> LabyDessin: new

create Labyrinthe
Main -> Labyrinthe: new

Main -> MoteurJeu: setTaille(width, height)
activate MoteurJeu
Main <-- MoteurJeu
deactivate MoteurJeu

Main -> MoteurJeu: setFPS(pFPS)
activate MoteurJeu
Main <-- MoteurJeu
deactivate MoteurJeu

Main -> MoteurJeu: launch(jeuLaby, dessinLaby)
activate MoteurJeu
create Clavier
MoteurJeu -> Clavier: new

create Canvas
MoteurJeu -> Canvas: new

loop chaque frame
    MoteurJeu -> LabyJeu: update(secondes, clavier)
    activate LabyJeu

    alt clavier.droite
        LabyJeu -> Labyrinthe: deplacerPerso(Labyrinthe.DROITE)
        activate Labyrinthe
        LabyJeu <-- Labyrinthe
        deactivate Labyrinthe
    end

    alt clavier.gauche
        LabyJeu -> Labyrinthe: deplacerPerso(Labyrinthe.GAUCHE)
        activate Labyrinthe
        LabyJeu <-- Labyrinthe
        deactivate Labyrinthe
    end

    alt clavier.haut
        LabyJeu -> Labyrinthe: deplacerPerso(Labyrinthe.HAUT)
        activate Labyrinthe
        LabyJeu <-- Labyrinthe
        deactivate Labyrinthe
    end

    alt clavier.bas
        LabyJeu -> Labyrinthe: deplacerPerso(Labyrinthe.BAS)
        activate Labyrinthe
        LabyJeu <-- Labyrinthe
        deactivate Labyrinthe
    end

    LabyJeu -> Labyrinthe: etreFini()
    activate Labyrinthe
    LabyJeu <-- Labyrinthe : fin
    deactivate Labyrinthe
    MoteurJeu <-- LabyJeu
    deactivate LabyJeu

    MoteurJeu -> LabyDessin: dessinerJeu(jeuLaby, canvas)
    activate LabyDessin
    LabyDessin <-- MoteurJeu
    deactivate LabyDessin

end
Main <-- MoteurJeu
deactivate MoteurJeu

@enduml

@startuml
title Diagramme de Classe pour LabyJeu avec Moteur de Jeu

interface Jeu {
    +update(secondes: double, clavier: Clavier): void
    +init(): void
    +etreFini(): boolean
}

interface DessinJeu {
    +dessinerJeu(jeu: Jeu, canvas: Canvas): void
}

class LabyJeu {
    +LabyJeu(labyrinthe: Labyrinthe)
    +update(secondes: double, clavier: Clavier): void
    +init(): void
    +etreFini(): boolean
    +getLaby(): Labyrinthe
}

class LabyDessin {
    +<static> tailleCase: int
    +dessinerJeu(jeu: Jeu, canvas: Canvas): void
}

class Labyrinthe {
    +deplacerPerso(direction: int): void
    +etreFini(): boolean
}

class Clavier {
    +haut: boolean
    +bas: boolean
    +gauche: boolean
    +droite: boolean
    +appuyerTouche(event: KeyEvent): void
    +relacherTouche(event: KeyEvent): void
}

class MoteurJeu {
    -FPS: double
    -dureeFPS: double
    -WIDTH: double
    -HEIGHT: double
    -frameStats: FrameStats
    -jeu: Jeu
    -dessin: DessinJeu
    -controle: Clavier
    +launch(jeu: Jeu, dessin: DessinJeu): void
    +setFPS(FPSSouhaitees: int): void
    +setTaille(width: double, height: double): void
    +start(primaryStage: Stage): void
    -startAnimation(canvas: Canvas): void
}

Jeu <|.. LabyJeu
LabyJeu --> Labyrinthe : -laby
MoteurJeu --> Jeu : -<static> jeu
MoteurJeu --> DessinJeu : -<static> dessin
MoteurJeu --> Clavier : -<static> clavier
DessinJeu <|.. LabyDessin

@enduml
